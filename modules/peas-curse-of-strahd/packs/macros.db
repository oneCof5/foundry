{"name":"tmx-glow-blue","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"console.log(args);\nconst lastArg = args[args.length - 1];\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n//The filterID can be any name you desire.\nconst filterID = \"blueGlow\";\n//You can change the params to be any other TMX effect you want. Just make sure to keep the one line filterId: filterID,\nlet params =\n[{\n    filterType: \"glow\",\n    filterId: filterID,\n    outerStrength: 4,\n    innerStrength: 0,\n    color: 0x5099DD,\n    quality: 0.5,\n    padding: 10,\n    animated:\n    {\n        color: \n        {\n           active: true, \n           loopDuration: 3000, \n           animType: \"colorOscillation\", \n           val1:0x5099DD,\n           val2:0x90EEFF\n        }\n    }\n}];\n\n\nif (args[0] === \"on\")\n  await TokenMagic.addUpdateFiltersOnSelected(params, target);\n\nif (args[0] === \"off\")\n//  target.TMFXdeleteFilters(filterID);\n  await TokenMagic.deleteFilters(target, filterID);","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.0tpBIuYb7o8gJzFR","hash":"6a2bd2990fb8d90eb42e96f9a2d9666b590622e9"},"cf":{"id":"temp_n7bxqu6hypb","path":"Token FX","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686273930,"modifiedTime":1672686273930,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"0tpBIuYb7o8gJzFR","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Brazier Light","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/magic/light/orb-lightbulb-gray.webp","command":"// Copy into a new Foundry macro. Apologies if the code is inelegant... JS is not my favourite language and this is the first Foundry macro I've ever written.\n\n// This id should match the light in the brazier room. If this macro isn't working, this line is probably where it needs to be fixed.\nconst scn = game.scenes.viewed;\nconsole.log('The viewed scene is ', scn);\nconst light_id = \"e6iDuaHIxKRJOmzq\";\n\n// Find the right light object\nconst lightD = canvas.lighting.get(light_id).document;\nconsole.log('lightD = ', lightD);\n\n// Dialog to change the colour\nlet d = new Dialog({\n title: \"Brazier Room Stones\",\n content: \"<p style='text-align: center'>Seven coloured, spherical stones rest in indentations around this brazier. A large hourglass hanging above the flames has an inscription on its base...<br><br><i>Cast a stone into the fire:<br>Violet leads to the mountain spire<br>Orange to the castle’s peak<br>Red if lore is what you seek<br>Green to where the coffins hide<br>Indigo to the master’s bride<br>Blue to ancient magic’s womb<br>Yellow to the master’s tomb</i><br><br>Throw a stone into the fire?<br><br></p>\",\n buttons: {\n  indigo: {\n    \n   label: \"<p style='color: #ee82ee'>⬤</p>\",\n   callback: () => { changeBrazier(\"#ee82ee\"); }\n  },\n  violet: {\n   label: \"<p style='color: #4b0082'>⬤</p>\",\n   callback: () => { changeBrazier(\"#4b0082\"); }\n  },\n  blue: {\n   label: \"<p style='color: #0000ff'>⬤</p>\",\n   callback: () => { changeBrazier(\"#0000ff\"); }\n  },\n  green: {\n   label: \"<p style='color: #00ff00'>⬤</p>\",\n   callback: () => { changeBrazier(\"#00ff00\"); }\n  },\n  yellow: {\n   label: \"<p style='color: #ffff00'>⬤</p>\",\n   callback: () => { changeBrazier(\"#ffff00\"); }\n  },\n  orange: {\n   label: \"<p style='color: #ffa500'>⬤</p>\",\n   callback: () => { changeBrazier(\"#ffa500\"); }\n  },\n  red: {\n   label: \"<p style='color: #ff0000'>⬤</p>\",\n   callback: () => { changeBrazier(\"#ff0000\"); }\n  }\n }\n}).render(true);\n\nasync function changeBrazier(newColor) {\n    console.log(`Change the color from ${lightD.config.color} to ${newColor}`);\n    const updates = [{_id: light_id, \"config.color\": newColor}];\n    await scn.updateEmbeddedDocuments(\"AmbientLight\", updates)\n\n// await game.scenes.viewed.updateEmbeddedDocuments(\"AmbientLight\", [{_id: \"e6iDuaHIxKRJOmzq\", \"config.color\": \"#0000ff\"}]);\n\n}","flags":{"scene-packer":{"hash":"437aded8c2d49a07938227b1d8c36bb0e6742f03","sourceId":"Macro.27afVyLxeL3s3sSu"},"core":{"sourceId":"Macro.27afVyLxeL3s3sSu"},"cf":{"id":"temp_71hhn63b31s","path":"Scenes#/CF_SEP/Castle Ravenloft","color":"#ff0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676987675723,"modifiedTime":1677191293364,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"27afVyLxeL3s3sSu","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"vampire-unarmed-strike","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// Midi-QOL OnUseMacro calls this macro from the Macro library.\nasync function wait(ms) {return new Promise(resolve => {setTimeout(resolve, ms);});}\n\nconsole.log(\"VAMPIRE-UNARMED-STRIKE: args\",args);\nif(args[0].hitTargets[0] === undefined) return {};\nlet actorD = game.actors.get(args[0].actor._id);\nlet tokenD = canvas.tokens.get(args[0].tokenId);\nlet targetD  = canvas.tokens.get(args[0].hitTargets[0].id);\nlet itemD = args[0].item;\nlet itemCiD = args[0].itemCardId;\nlet damList = args[0].damageList;\nlet gameRound = game.combat ? game.combat.round : 0;\n\n// Unarmed Strike is 1d8[slashing] + 4d6[necrotic]\nlet numDice = [\n  1,\n  4\n];\nif (args[0].isCritical) { \n    numDice[0] = numDice[0] * 2;\n    numDice[1] = numDice[1] * 2;\n}\nlet baseDice = [\n  'd8', \n  'd4'\n];\nlet damage_type = [\n  'slashing',\n  'necrotic'\n];\nlet dmgDice = [\n  `${numDice[0]}${baseDice[0]}[${damage_type[0]}]`,\n  `${numDice[1]}${baseDice[1]}[${damage_type[1]}]`\n];\nlet damageRollSlash = new Roll(`${dmgDice[0]}`).evaluate({async:false});\ngame.dice3d?.showForRoll(damageRollSlash);\n\nawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRollSlash.total, damage_type[0], [targetD], damageRollSlash, {flavor: `(${CONFIG.DND5E.damageTypes[damage_type[0]]})`, itemCardId: itemCiD, damageList: damList});\n\nawait wait(800);\nlet damageRollNecro = new Roll(`${dmgDice[1]}`).evaluate({async:false});\ngame.dice3d?.showForRoll(damageRollNecro);\nnew MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRollNecro.total, damage_type[1], [targetD], damageRollNecro, {flavor: `(${CONFIG.DND5E.damageTypes[damage_type[1]]})`, itemCardId: itemCiD, damageList: damList});\n// await MidiQOL.applyTokenDamage([{damage: damageRoll.total, type: damage_type[1]}], damageRoll.total, new Set([tokenD]), itemD.name, new Set());","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.2V8HjtJpnynAGKQZ","hash":"14a4da306cb1cc24e878f01f3a3c17ba7a2e010a"},"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101597,"modifiedTime":1677191101597,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"2V8HjtJpnynAGKQZ","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"delete-templates","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"let templates = canvas.templates.placeables.map(i=> i.id);\nconsole.log(templates);\nawait canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", templates);","flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"scene-packer":{"sourceId":"Macro.2yqmvKppwjQK43iN","hash":"7d5ab302b97e0b1976db06bf5c40414085fe1564"},"cf":{"id":"temp_5yo6bsjh9fo","path":"Misc","color":"#828282"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1670532041927,"modifiedTime":1672686225120,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"2yqmvKppwjQK43iN","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_vekmxgi59zp","path":"Music","color":"#0905ff","name":"Music","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["PpRbHLla8DwATQqV","d4g5S9niIzQL3key"],"version":"2.5.6"},"scene-packer":{"hash":"01bf9ffd1b2ac5d83257b886c731deaca0ef0ce1"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686067794,"modifiedTime":1672686067894,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"3ZkjhgalxvKK4pUF"}
{"name":"Heart of Sorrow","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"https://assets.forge-vtt.com/bazaar/modules/jb2a_patreon-2d960ceba80cc778/assets/Library/1st_Level/Cure_Wounds/CureWounds_01_Red_Thumb.webp","command":"const heart = game.actors.getName(\"Heart of Sorrow\");\nconst strahd = game.actors.getName(\"Strahd von Zarovich\");\n\n// get current temp hp / max temp hp\nlet tempHp = strahd.system.attributes.hp.temp;\nlet tempHpMax = strahd.system.attributes.hp.tempmax;\n\n// update Strahd's temp HP\nif (tempHp === tempHpMax) {return}\nlet newTempHp = ((tempHp + 20) >= tempHpMax) ? tempHpMax: tempHp + 20;\n\nawait strahd.applyTempHP(newTempHp);\n\n// sync to Heart of Sorrow\nawait heart.update({\"system.attributes.hp.value\" : newTempHp});","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"5d3237ea62399edb68a9b55f18185f53c4ba9074","sourceId":"Macro.4u10TdbfqVSkYC1p"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.4u10TdbfqVSkYC1p"},"cf":{"id":"temp_71hhn63b31s"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678634477805,"modifiedTime":1678636672383,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"4B7LuO8ielaNQUQL"}
{"name":"ws-mirror-image","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"/* Mirror Image | by Element_Re\n* Configure the Mirror Image spell to have 3 active effects.\n* Temporarily untargets the target if the roll indicates the attack targets a mirror image, and checks the attack roll to see if it hits the double's AC (10 + original's dex mod). If it hits this AC, it removes one of the Mirror Image stacks. At the end of the workflow it retargets the targets that were removed to interrupt processing.\n*/\nHooks.on(\"midi-qol.preCheckHits\", async (workflow) => {\n  if (!workflow.attackRoll) return;\n  const mirrorImageTargetedIds = [];\n\n  for (let token of workflow.targets) {\n    token = token.document ?? token;\n    const actor = token.actor.document ?? token.actor;\n    const mirrorImages = [...actor.effects.values()].filter(effect => {\n      return effect.data.label.toUpperCase() === \"MIRROR IMAGE\"\n    })\n    if (mirrorImages.length < 1) continue;\n    let imageTargetCheck;\n    switch (mirrorImages.length) {\n      case (1): {\n        imageTargetCheck = 11;\n        break;\n      }\n      case (2): {\n        imageTargetCheck = 8;\n        break;\n      }\n      default: {\n        imageTargetCheck = 6;\n        break;\n      }\n    }\n    const mirrorImageRoll = await Roll.create('1d20').evaluate();\n    const messageData = {\n      flavor: `Mirror Image Check (DC ${imageTargetCheck})`,\n      type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n      roll: mirrorImageRoll,\n      content: await mirrorImageRoll.render(),\n      // Uncomment this to make the generated message always public\n      // Otherwise, it will use roll mode of the user who rolls the attack\n      //rollMode: CONST.DICE_ROLL_MODES.PUBLIC\n    };\n\n    if (mirrorImageRoll.total >= imageTargetCheck) {\n      mirrorImageTargetedIds.push(token.id);\n      messageData.content += `<p>${workflow.token.name} attacks one of ${token.name}'s mirror images!</p>`;\n      if (workflow.attackRoll.total >= (10 + actor.data.data.abilities.dex.mod)) {\n        messageData.content += '<p>The mirror image is hit and destroyed!</p>';\n        actor.deleteEmbeddedDocuments('ActiveEffect', [mirrorImages[0].id]);\n      } else {\n        messageData.content += '<p>The attack misses!</p>';\n      }\n    } else {\n      messageData.content += `<p>${workflow.token.name} attacks ${token.name} directly!</p>`;\n    }\n    const message = await ChatMessage.create(messageData, {});\n  }\n\n  if (mirrorImageTargetedIds.length) {\n    const originalTargetIds = [...game.user.targets].map(target => target.id);\n    const filteredIds = originalTargetIds.filter((targetId) => !mirrorImageTargetedIds.includes(targetId));\n    game.user.setFlag('midi-qol', 'mirrorImageWorkflowTargetedIds', mirrorImageTargetedIds);\n    // Unset targets so they are ignored by the rest of the workflow\n    game.user.updateTokenTargets(filteredIds);\n  }\n\n});\n\nHooks.on(\"midi-qol.RollComplete\", () => {\n  const mirrorImageTargetedIds = game.user.getFlag('midi-qol', 'mirrorImageWorkflowTargetedIds');\n  // Restore targets that were removed earlier to skip the rest of the workflow.\n  if (mirrorImageTargetedIds) {\n    const restoredTargetIds = [...[...game.user.targets].map(target => target.id), ...mirrorImageTargetedIds];\n    console.log(restoredTargetIds);\n    game.user.updateTokenTargets(restoredTargetIds);\n  }\n  game.user.unsetFlag('midi-qol', 'mirrorImageWorkflowTargetedIds');\n});","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.4cKiuw1jdEWJSORM","hash":"6dbf42a70b47117102db8f5f1049bface566d0d0"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035112,"modifiedTime":1672686035112,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"4cKiuw1jdEWJSORM","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"updateVision","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/magic/perception/eye-ringed-glow-angry-teal.webp","command":"await token.document.update({\"sight.range\": token.actor.system.attributes.senses.darkvision})","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"2db8a59ae66c7a8ea5850b101a54b18ff0b9987d","sourceId":"Macro.TA91dCkwysmWdBpE"},"core":{"sourceId":"Macro.G0v2bnguPXisbHNt"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676148693729,"modifiedTime":1677191292959,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"8TrDSvTcaRNBnHO3"}
{"name":"Show or Hide Token","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/svg/statue.svg","scope":"global","command":"for(let t of canvas.tokens.controlled)\n{\n  t.update({\"hidden\" : !t.data.hidden});\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.8qTGo9yWZLvjPjqr","hash":"579e8dd28eb6486f0ae9f02b2a2627b2e295e31d"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191292789,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"8qTGo9yWZLvjPjqr","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_b5jc266e57h","path":"Random Encounters","color":"#1b4d00","name":"Random Encounters","children":[],"folderPath":["temp_3z3pjeh75wb"],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["lwXlCYvLR7UwBcCP","zmrSR9hFAfPFySI2"],"version":"2.5.7"},"scene-packer":{"hash":"f77b86a6f48959f5b8e635f8801776e0c6457d05"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1672686006721,"modifiedTime":1678632408825,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"9DKHqfyk2T6e9SjX"}
{"name":"tmx-glow-purple","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"console.log(args);\nconst lastArg = args[args.length - 1];\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n//The filterID can be any name you desire.\nlet filterID = \"purpleGlow\";\n//You can change the params to be any other TMX effect you want. Just make sure to keep the one line filterId: filterID,\nlet params =\n[{\n    filterType: \"glow\",\n    filterId: filterID,\n    outerStrength: 4,\n    innerStrength: 0,\n    color: 0x5099DD,\n    quality: 0.5,\n    padding: 10,\n    animated:\n    {\n        color: \n        {\n           active: true, \n           loopDuration: 3000, \n           animType: \"colorOscillation\", \n           val1:0x6600CC,\n           val2:0x9900CC\n        }\n    }\n}];\n\n\nif (args[0] === \"on\")\n  await TokenMagic.addUpdateFiltersOnSelected(params, target);\n\nif (args[0] === \"off\")\n//  target.TMFXdeleteFilters(filterID);\n  await TokenMagic.deleteFilters(target, filterID);","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.9ETEwKHowu65gETf","hash":"b4822431dffd357fdce079087186f017adab0cfe"},"cf":{"id":"temp_n7bxqu6hypb","path":"Token FX","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686273972,"modifiedTime":1672686273972,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"9ETEwKHowu65gETf","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_71hhn63b31s","path":"Scenes#/CF_SEP/Castle Ravenloft","color":"#ff0000","name":"Castle Ravenloft","children":[],"folderPath":["temp_3z3pjeh75wb"],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["27afVyLxeL3s3sSu","4B7LuO8ielaNQUQL","r7bquUURNPCANhFn","Ltp7wjyo6hlZH2mt","W4Ihlm1AHzvYepkT","odYRIJG5PPgpWgnj"],"version":"2.5.7"},"scene-packer":{"hash":"9893c3fa91e5ef021c986ea041e79d5f480d1efc"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191293435,"modifiedTime":1678903974602,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"C54nwOAAfgVIcVuS"}
{"name":"ws-undeadFortitude","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"preUpdateToken\", async (scene, tokenData, updateData, options) => {\n    let dhp = updateData.dhp;\n    let token = canvas.tokens.get(tokenData._id)\n    let undeadActor = token.actor;\n    let undeadCheck = undeadActor.system.details.type.value\n    if (undeadCheck !== \"undead\") {\n        return;\n    }\n    let hp = undeadActor.system.attributes.hp.value;\n\n    \n    \n    let feature = undeadActor.items.find(i => i.name === \"Undead Fortitude\")\n    if (!feature) {\n        return;\n    }\n\n    if (hp + dhp <= 0 && dhp !== 0) {\n        console.log(\"test\");\n        let content = `Damage to target: ${-dhp}`;\n        new Dialog({\n            title: \"Undead Fortitude Save\",\n            content: content,\n            buttons: {\n                one: {\n                    label: \"Radiant Damage or Crit\",\n                    callback: () => {\n                        undeadActor.update({\"system.attributes.hp.value\": 0}, {skipUndeadCheck: true})\n                        return;\n                    },\n                },\n                two: {\n                    label: \"Normal Damage\",\n                    callback: async (html) => {\n                        let roll = await token.actor.rollAbilitySave(`con`);\n                        let number = -dhp\n                        console.log(number)\n                        if (roll.total >= (5 + number)) {\n                            console.log(\"survives\")\n                            undeadActor.update({\"system.attributes.hp.value\": 1 }, {skipUndeadCheck: true});\n                        } else if(roll.total < (5 + number)) {\n                            console.log(\"dies\")\n                            undeadActor.update({\"system.attributes.hp.value\": 0}, {skipUndeadCheck: true})\n                        }\n                },\n                },\n            },\n        }).render(true);\n    return false;\n    } else return true;\n});","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.CTZunpDtM1Xc65ak","hash":"59beb9debda024d79b6126f9ca3988de54483ca1"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1666972596204,"modifiedTime":1672686035162,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"CTZunpDtM1Xc65ak","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"vampire-2d6-bite-drain-max-hp","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/skills/wounds/blood-drip-droplet-red.webp","scope":"global","command":"// Midi-QOL OnUseMacro calls this macro from the Macro library.\n\nasync function wait(ms) {return new Promise(resolve => {setTimeout(resolve, ms);});}\nif(args[0].hitTargets[0] === undefined) return {};\nlet actorD = game.actors.get(args[0].actor._id);\nlet tokenD = canvas.tokens.get(args[0].tokenId);\nlet targetD  = canvas.tokens.get(args[0].hitTargets[0].id);\nlet itemD = args[0].item;\nlet itemCiD = args[0].itemCardId;\nlet damList = args[0].damageList;\nlet gameRound = game.combat ? game.combat.round : 0;\nlet damage_type = \"necrotic\";\n\nconst baseDice = 2;  // Bite in this case is 2d6\nconst numDice = args[0].isCritical ? baseDice * 2 : baseDice; // double dice on crit hit\nlet damageRoll = new Roll(`${numDice}d6[${damage_type}]`).evaluate({async:false});\ngame.dice3d.showForRoll(damageRoll); //brag\n\nlet hpNow = targetD.actor.data.data.attributes.hp.max; //current max hp\nlet atkDamage = damageRoll.total; // save this attack bite damage\nlet totDamage = hpNow - atkDamage;\n\n// necrotic bite damage applied to target\nnew MidiQOL.DamageOnlyWorkflow(actorD, tokenD, atkDamage, damage_type, [targetD], damageRoll, {flavor: `(${CONFIG.DND5E.damageTypes[damage_type]})`, itemCardId: itemCiD, damageList: damList});\n// healing back to the vampire\nawait MidiQOL.applyTokenDamage([{damage: atkDamage, type: \"healing\"}], atkDamage, new Set([tokenD]), itemD.name, new Set());\n\n// Notify the GM\n/*\nThe target’s hit point maximum is reduced by an amount equal to the necrotic\ndamage taken, and the vampire regains hit points equal to that amount. The reduction\nlasts until the target finishes a long rest. The target dies if its hit point\nmaximum is reduced to 0.\n*/\nlet hitContent = `<div class=\"midi-qol-nobox\"><div class=\"midi-qol-flex-container\"><div>This attack reduces ${targetD.name}'s Maximum Hit Points by ${atkDamage}.</div><div class=\"midi-qol-target-npc-GM\"><em>The maximum hit points for ${targetD.name} have been reduced from ${hpNow} to ${totDamage} in this attack.</em></div><div class=\"midi-qol-target-npc-GM\"><em>The reduction lasts until ${targetD.name} finishes a long rest.</em></div><div class=\"midi-qol-target-npc-GM\"><em>${targetD.name} dies if this effect reduces its hit point maximum to 0.</em></div><div class=\"midi-qol-target-npc-GM\"><em><b>${tokenD.name}<b> is healed for ${atkDamage}.</em></div></div></div>`;\n\nawait wait(600);\nlet chatMessage = game.messages.get(itemCiD);\nlet content = duplicate(chatMessage.data.content);\nlet searchString =  /<div class=\"midi-qol-saves-display\">[\\s\\S]*<div class=\"end-midi-qol-saves-display\">/g;\nlet replaceString = `<div class=\"midi-qol-saves-display\"><div class=\"end-midi-qol-saves-display\">${hitContent}`;\ncontent = content.replace(searchString, replaceString);\nchatMessage.update({content: content});\n\n// Check for an existing effect. If not found, create one. If found, update total Bite damage incurred.\nconst effectDataLabel = \"Bitten\";\nlet effectData;\nlet checkEffect = await targetD.actor.data.effects.find(i => i.data.label === effectDataLabel);\nif (!checkEffect) {\n  effectData = {\n    changes: [{ key: \"data.attributes.hp.max\", value: `${totDamage}`, mode: 5, priority: 20 }],\n    disabled: false,\n    duration: {startTime: game.time.worldTime},\n    flags: {\n      dae: { transfer: true, macroRepeat: \"none\", specialDuration: [] },\n      \"dnd5e-helpers\": { \"rest-effect\": \"Long Rest\" }\n    },\n    label : effectDataLabel,\n    origin: args[0].uuid,\n    icon : \"icons/skills/wounds/blood-drip-droplet-red.webp\",\n    transfer: false\n  };\n  await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: targetD.actor.uuid, effects: [effectData]});\n  return;\n} else if (checkEffect) {\n  effectData = {\n    _id: checkEffect.id,\n    changes: [\n      { key: \"data.attributes.hp.max\", value: `${totDamage}`, mode: 5, priority: 20 }\n    ]\n  };\n  await targetD.actor.updateEmbeddedDocuments('ActiveEffect', [effectData]);\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.bDK6LgQJL3spNrGx"},"scene-packer":{"sourceId":"Macro.GD15KbuGYMPc2n8p","hash":"50f18ba48eb33ea1a2dac4cb0e35ec0f1fa101b0"},"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101631,"modifiedTime":1677191101631,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"GD15KbuGYMPc2n8p","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_n7bxqu6hypb","path":"Token FX","color":"#6c0094","name":"Token FX","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["0tpBIuYb7o8gJzFR","f8oBnGpl2Xz4rGQV","9ETEwKHowu65gETf"],"version":"2.5.6"},"scene-packer":{"hash":"e0a0011ff731830e2b3edb35c2efa0b9ca9160ad"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686274044,"modifiedTime":1672686274142,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"HeWwH2NZ5t2XhEUR"}
{"name":"FormatLevelsDrawings","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"const scn = game.scenes.viewed;\n\n// Levels Stairs\nconst stairs = scn.drawings.filter(d => d.flags.levels.drawingMode === 2);\nconst stairUpd = stairs.map(d => ({\n    _id: d.id,\n    strokeColor: \"#000000\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#fffffc\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed\",\n    fontSize: 24,\n    fillColor: \"#303030\",\n    fillAlpha: 1,\n    fillType: 1,\n    hidden: true,\n    locked: true\n}));\n\n// Levels Stairs One-Way-Down\nconst stairsOneWayDown = scn.drawings.filter(d => d.flags.levels.drawingMode === 21);\nconsole.log('one way down: ',stairsOneWayDown);\nconst sowdUpd = stairsOneWayDown.map(d => ({\n    _id: d.id,\n    strokeColor: \"#000000\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#f5ccf4\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed\",\n    fontSize: 24,\n    fillColor: \"#303030\",\n    fillAlpha: 1,\n    fillType: 1,\n    hidden: true,\n    locked: true\n}));\n\n\n// Levels Elevators\nconst elevators = scn.drawings.filter(d => d.flags.levels.drawingMode === 3);\nconst elevUpd = elevators.map(d => ({\n    _id: d.id,\n    strokeColor: \"#000000\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#d1feff\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed\",\n    fontSize: 24,\n    fillColor: \"#303030\",\n    fillAlpha: 1,\n    fillType: 1,\n    hidden: true,\n    locked: true\n}));\n\n// Merge and update \nlet updates = [...stairUpd, ...sowdUpd, ...elevUpd];\n// console.log(updates);\nawait scn.updateEmbeddedDocuments(\"Drawing\", updates, {animate: false});","flags":{"scene-packer":{"hash":"d7603c3767a7179c26fba024e8344bed72bd5f93","sourceId":"Macro.Ir7x8nO9bbBxX7qj"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1674509327711,"modifiedTime":1677191292856,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"Ir7x8nO9bbBxX7qj","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-protection-good-evil","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"midi-qol.preAttackRoll\", function (workflow) {\n  let targetActor = workflow.targets.first().actor;\n  let effect = typeof targetActor.data.effects.find(i=> i.data.label === \"Protection from Good and Evil\" || i.data.label === \"Protection from Evil and Good\") !== undefined;\n  let attackerType = [\"aberration\", \"celestial\", \"elemental\", \"fey\", \"fiend\", \"undead\"].includes(workflow.actor.data.data.details.type?.value);\n  debugger;\n  if(!(effect && attackerType)) return {};\n  workflow.disadvantage = true;\n});","flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"scene-packer":{"sourceId":"Macro.K4togkmpr2487xUT","hash":"441d3a923366e732137ae84e6990d59c16cef89f"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1670530916453,"modifiedTime":1672686035195,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"K4togkmpr2487xUT","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Dash","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/skills/movement/arrow-upward-yellow.webp","scope":"global","command":"if (!token) token = game.users.character?.getActiveTokens()[0] ?? false;\nif (!token) return ui.notifications.warn(`${game.user.name} has no assigned character or no active token on scene`);\n\nconst msgHtml = `<p>${token.data.name} takes the <b>Dash</b> action.</p><p>Dash grants them additional movement speed (equal to their current speed) for the current turn.</p>`\n\nawait ChatMessage.create({content: msgHtml});\ngame.dfreds.effectInterface.toggleEffect('Dash');","flags":{"advanced-macros":{"runAsGM":true},"scene-packer":{"sourceId":"Macro.Lr4WC74M5PrlnohM","defaultPermission":2,"hash":"ea10daf397f7b89f4b3ab4ec452cc0c0dc7a1e99"},"cf":{"id":"temp_z106s4k8im","path":"Actions In Combat","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191091305,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"Lr4WC74M5PrlnohM","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Lair Action Start Turn","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/d20-highlight.svg","command":"// Get Lair Token\nconst lair = canvas.tokens.placeables.filter((token) => token.name.toLowerCase().match(/lair/i))[0];\nlair.control()\n\n// Get Strahd Token\nconst strahd = canvas.tokens.placeables.filter((token) => token.name.toLowerCase().match(/strahd/i))[0];\nconsole.log(strahd);\n\n// Animate\nnew Sequence()\n.animation()\n.on(lair)\n.teleportTo({ x: strahd.document.x, y: strahd.document.y })\n.snapToGrid()\n\n.play();","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"205ab93d7c81bfe0d7432d7df3bff3d33050f9f6","sourceId":"Macro.XpxTLsPi6XSXHorI"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.0mwxCOikK2OJtb4l"},"cf":{"id":"temp_71hhn63b31s"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678600051501,"modifiedTime":1678761508996,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"Ltp7wjyo6hlZH2mt"}
{"name":"invisible","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// DAE\nlet t = canvas.tokens.get(args[1].tokenId);\nif (args[0] === 'on') {\n  t.document.update({'hidden':true})\n}\nif (args[0] === 'off') {\n  t.document.update({'hidden':false})\n}","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.Mv2FYamunCgEvsiD","hash":"e8c997655755608ce532e4b823d29b4c3ced6c37"},"cf":{"id":"temp_7a73c81s0it","path":"Token Effects","color":"#8080ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1666983881939,"modifiedTime":1677191117399,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"Mv2FYamunCgEvsiD","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"DeletePlaylists","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"game.playlists.entities.forEach(e => e.delete())","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.PpRbHLla8DwATQqV","hash":"756aa6d3f581d31fed7470a842a76b34163bd188"},"cf":{"id":"temp_vekmxgi59zp","path":"Music","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686067721,"modifiedTime":1672686067721,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"PpRbHLla8DwATQqV","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"clearFlags","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"const flags = ['cf']; // all flag names here\nconst updates = game.actors.map(a => {\n  const update = {_id: a.id};\n  for(const flag of flags) update[`flags.-=${flag}`] = null;\n  return update;\n});\nawait Actor.updateDocuments(updates);","flags":{"scene-packer":{"hash":"2701b8480e37dbc89b971e956dbad856951c8634","sourceId":"Macro.QLBIOxK1w7CtqMXH"},"cf":{"id":"temp_rhhg9m29647","path":"Tools","color":"#ff8000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1675532388850,"modifiedTime":1678632340914,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"QLBIOxK1w7CtqMXH","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-assassinate","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// World Script Module Required to run this.\nHooks.on(\"midi-qol.preDamageRoll\", async function (workflow) {\n  console.log('WS_ASSASSINATE SOURCE WORKFLOW:',workflow);\n  // Confirm the source actor has the assassinate feature\n  let assassinate = workflow.actor.itemTypes.feat.find(i=> i.name.toLowerCase() === \"assassinate\");\n  if (!assassinate) return {};\n  // Check whether the target is Surprised (custom CE)\n  let target = canvas.tokens.get(workflow.targets[0].id).actor;\n  let surprised = target.effects.find(e => e.data.label.toLowerCase() === 'surprised');\n  if (!surprised) return {};\n  workflow.isCritical = true;\n  console.log('WS_ASSASSINATE UPDATED WORKFLOW:',workflow);\n});","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.SkVszaJLwNua8VDL","hash":"e9d6c8e9e689e5b5ef73f732750a3f2ace437eb8"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035228,"modifiedTime":1672686035228,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"SkVszaJLwNua8VDL","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"end-combat","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"for (let combat of game.combats){\n    combat.endCombat()\n}","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.Sv5CJ0gfzINL76xq","hash":"8a8d62398eac9c89144222a3f02feb9a1744ef88"},"cf":{"id":"temp_5yo6bsjh9fo","path":"Misc","color":"#828282"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686225159,"modifiedTime":1672686225159,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"Sv5CJ0gfzINL76xq","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_7a73c81s0it","path":"Token Effects","color":"#fb9404","name":"Token Effects","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["Mv2FYamunCgEvsiD"],"version":"2.5.7"},"scene-packer":{"hash":"55a701931aba3033e082765f81815115d3a9c897"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1672686023930,"modifiedTime":1677191293315,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"VHdygkQ74KX2urc3"}
{"name":"Ready","type":"script","author":"Jd73bpddRreBTuIB","img":"https://assets.forge-vtt.com/bazaar/modules/dfreds-convenient-effects/assets/images/ready.svg","scope":"global","command":"if (!token) token = game.users.character?.getActiveTokens()[0] ?? false;\nif (!token) return ui.notifications.warn(`${game.user.name} has no assigned character or no active token on scene`);\n\nconst msgHtml = `<p>${token.data.name} takes the <b>Ready</b> action.</p><p>Ready allows them to use their reaction to take an action based upon a triggering source.</p><p>When the readied action is a spell, they cast it as normal but hold its energy, which releases with their reaction when the trigger occurs. To be readied, a spell must have a casting time of 1 action, and holding onto the spell’s magic requires concentration. If concentration is broken, the spell dissipates without taking effect.</p?`\n\nawait ChatMessage.create({content: msgHtml});\nawait game.dfreds.effectInterface.toggleEffect('Ready');","flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.Lr4WC74M5PrlnohM"},"scene-packer":{"sourceId":"Macro.VVDH6HokBdmAwVz2","defaultPermission":2,"hash":"98cc2a264aaa4ef1eb4524bf8fb0f733c04ea250"},"cf":{"id":"temp_z106s4k8im","path":"Actions In Combat","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191091403,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"VVDH6HokBdmAwVz2","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"LetThereBeTokenLight","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/fire.svg","command":"const flame = { \"type\": \"flame\", \"speed\": 2, \"intensity\": 3, \"reverse\": false };\nconst sun = { \"type\": \"dome\", \"speed\": 3, \"intensity\": 5, \"reverse\": false };\nconst colors = {\"radiant\": \"#fffafa\", \"fire\": \"#ffcc66\", \"dark\": \"#000000\"}\nlet tokenAura = {};\n\nasync function updateToken(dist, angle, color, fx, auraDistance) {\n  if (auraDistance > 0) {\n    tokenAura = {\n      \"flags\": {\n        \"token-auras\": {\n          \"aura2\": {\n            \"colour\": \"#ffcc66\",\n            \"distance\": parseInt(auraDistance),\n            \"opacity\": 0.1,\n            \"permission\": \"all\",\n            \"square\": false\n          }\n        }\n      }\n    };\n  }\n  \n  let updates = {\n    \"_id\": canvas.tokens.controlled[0].id,\n    \"light\": {\n      \"angle\": angle,\n      \"alpha\": 0.1,\n      \"animation\": fx,\n      \"bright\": dist,\n      \"color\": color,\n      \"darkness\": { \"min\": 0.2, \"max\": 1 },\n      \"dim\": 2*dist\n    }\n  };\n  updates = mergeObject(updates, tokenAura)\n  console.log(\"LetThereBeTokenLight - updates: \", updates);\n  await canvas.scene.updateEmbeddedDocuments(\"Token\", [updates]);\n}\n\nconst D = new Dialog({\n  title: \"Which Light?\",\n  buttons: {\n    none: {\n      icon: `<i class=\"fa-solid fa-lightbulb\"></i>`,\n      label: \"None\", // no distance, no effect\n      callback: () => { updateToken(0, 360, colors.dark, null)}\n    },\n    candle: {\n      icon: `<i class=\"fa-solid fa-menorah\"></i>`,\n      label: \"Candle\", // circle, dim 5, bright 5, flame effect\n      callback: () => { updateToken(5, 360, colors.fire, flame)}\n    },\n    torch: {\n      icon: `<i class=\"fa-solid fa-fire\"></i>`,\n      label: \"Torch\", // circle, dim 10, bright 20, flame effect\n      callback: () => { updateToken(10, 360, colors.fire, flame)}\n    },\n/*\n    lamp: {\n      icon: `<i class=\"fa-solid fa-lamp\"></i>`,\n      label: \"Lamp\", // circle, dim 15, bright 15, flame effect\n      callback: () => { updateToken(15, 360, colors.fire, flame)}\n    },\n*/\n    cantrip: {\n      icon: `<i class=\"fa-solid fa-bahai\"></i>`,\n      label: \"Light (Cantrip)\", // circle, dim 20, bright 20, flame effect\n      callback: () => { updateToken(20, 360, colors.radiant, sun)}\n    },\n    bullseye: {\n      icon: `<i class=\"fa-solid fa-flashlight\"></i>`,\n      label: \"Bullseye Lantern\", // cone, dim 60, bright 60, flame effect\n      callback: () => { updateToken(60, 45, colors.fire, flame)}\n    },\n    hooded: {\n      icon: `<i class=\"fa-solid fa-flashlight\"></i>`,\n      label: \"Hooded Lantern\", // circle, dim 30, bright 30, flame effect\n      callback: () => { updateToken(30, 360, colors.fire, flame)}\n    },\n    sun30: {\n      icon: `<i class=\"fa-regular fa-sun\"></i>`,\n      label: \"Sunlight (30ft)\", // circle, dim 30, bright 30, flame effect\n      callback: () => { updateToken(30, 360, colors.radiant, sun, 30)}\n    },\n    sun25: {\n      icon: `<i class=\"fa-regular fa-sun\"></i>`,\n      label: \"Sunlight (25 ft)\", // circle, dim 25, bright 25, flame effect\n      callback: () => { updateToken(25, 360, colors.radiant, sun, 25)}\n    },\n    sun20: {\n      icon: `<i class=\"fa-regular fa-sun\"></i>`,\n      label: \"Sunlight (20 ft)\", // circle, dim 320, bright 20, flame effect\n      callback: () => { updateToken(20, 360, colors.radiant, sun, 20)}\n    },\n    sun15: {\n      icon: `<i class=\"fa-regular fa-sun\"></i>`,\n      label: \"Sunlight (15 ft)\", // circle, dim 15, bright 15, flame effect\n      callback: () => { updateToken(15, 360, colors.radiant, sun, 15)}\n    },\n    sun10: {\n      icon: `<i class=\"fa-regular fa-sun\"></i>`,\n      label: \"Sunlight (10 ft)\", // circle, dim 10, bright 10, flame effect\n      callback: () => { updateToken(10, 360, colors.radiant, sun, 10)}\n    },\n    cancel: {\n      icon: `<i class=\"fas fa-times\"></i>`,\n      label: \"Cancel\",\n      callback: html => console.log()\n    }\n  }});\n\nD.render(true);\n\n/* \nawait canvas.scene.updateEmbeddedDocuments(\"Token\", [{\n    _id: canvas.tokens.controlled[0].id,\n    light: {dim: 10}\n}]);\n*/","flags":{"scene-packer":{"hash":"cbb78bbbb59ab7d3f4ff13da832cb371d7f89a48","sourceId":"Macro.VdDK3C6PDnvmBSRL","defaultPermission":2},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"cf":{"id":"temp_st0yezfm5fb","path":"Lighting","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677196171288,"modifiedTime":1678632313561,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"VdDK3C6PDnvmBSRL","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"FormatDrawingsMapNotes","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"const scn = game.scenes.viewed;\nconst gridSize = scn.grid.size;\nconst fontSize = (gridSize > 50) ? 40 : 30;\nconst fontSizeSm = (gridSize > 50) ? 36 : 18;\n\nconst circle = {\n    type: \"e\",\n    height: gridSize,\n    width: gridSize\n};\n\nconst smCircle = {\n    type: \"e\",\n    height: Math.floor(gridSize/3)*2,\n    width: Math.floor(gridSize/3)*2\n};\n\nconst rect = {type: \"r\"};\n\n// Location Notes - tag: map-note\nconst mapNotes = Tagger.getByTag(\"map-note\");\nconst mapNotesUpdates = mapNotes.map(d => ({\n    _id: d.id,\n    hidden: true,\n    locked: false,\n    shape: circle,\n    strokeColor: \"#a30000\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#a30000\",\n    textAlpha: 1,\n    fontFamily: \"Modesto Condensed\",\n    fontSize: fontSize,\n    fillColor: \"#f9f5c8\",\n    fillAlpha: 1,\n    fillType: 1\n}));\n\n// Smaller location Notes - tag: map-note-small\nconst smallMapNotes = Tagger.getByTag(\"map-note-small\");\nconst smallMapNotesUpdates = smallMapNotes.map(d => ({\n    _id: d.id,\n    hidden: true,\n    locked: false,\n    shape: smCircle,\n    strokeColor: \"#a30000\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#a30000\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed\",\n    fontSize: fontSizeSm,\n    fillColor: \"#f9f5c8\",\n    fillAlpha: 1,\n    fillType: 1\n}));\n\nconst dmNotes = Tagger.getByTag(\"dm-note\");\nconst dmNotesUpdates = dmNotes.map(d => ({\n    _id: d.id,\n    hidden: true,\n    locked: false,\n    strokeColor: \"#f9f5c8\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#f9f5c8\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed Italic\",\n    fontSize: 18,\n    fillColor: \"#a30000\",\n    fillAlpha: 1,\n    fillType: 1\n}));\n\nconst trapNotes = Tagger.getByTag(\"trap\");\nconst trapNotesUpdates = trapNotes.map(d => ({\n    _id: d.id,\n    hidden: true,\n    locked: false,\n    strokeColor: \"#f9f5c8\",\n    strokeWidth: 2,\n    strokeAlpha: 1,\n    textColor: \"#f9f5c8\",\n    textAlpha: 1,\n    fontFamily: \"Roboto Condensed Italic\",\n    fontSize: 22,\n    fillColor: \"#a30000\",\n    fillAlpha: 1,\n    fillType: 1\n}));\n\n// Merge and update \nlet updates = [...mapNotesUpdates, ...smallMapNotesUpdates, ...dmNotesUpdates, ...trapNotesUpdates];\n// console.log(updates);\nawait scn.updateEmbeddedDocuments(\"Drawing\", updates, {animate: false});","flags":{"scene-packer":{"hash":"3eeb0ff7559527fb1af374feb5227100a29b5a82","sourceId":"Macro.VkaLR9siIHxInCRI"},"core":{"sourceId":"Macro.VkaLR9siIHxInCRI"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677000219123,"modifiedTime":1677191292994,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"VkaLR9siIHxInCRI","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Ravenloft Random Encounter Check","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/environment/creatures/gargoyle-grey-blue.webp","scope":"global","command":"// setting variables\nlet msgContent = 'Wandering Monster roll was: ';\n\n// roll to check for wandering monster\nconst randomRoll = new Roll(`1d20`).evaluate({ async: false });\nresult = randomRoll.total;\n\n// create the message\nawait ChatMessage.create({\n  content: msgContent + result,\n  whisper: ChatMessage.getWhisperRecipients(\"GM\")\n});\n\n// In this example, a roll greater or equal to 18 will generate a roll from the Table. Tweak as needed!\nif (result >= 18) {\n  const pack = game.packs.get(\"peas-curse-of-strahd.rolltables\");\n  const entry = pack.index.getName(\"Ravenloft Random Encounter Table\");\n  const random = await pack.getDocument(entry._id);\n  await random.draw({ rollMode: \"gmroll\" });\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.W4Ihlm1AHzvYepkT","hash":"c24972ec63d48b63a1d230935259f2dcf02db6ce"},"cf":{"id":"temp_71hhn63b31s","path":"Random Encounters","color":"#1b4d00"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1678632400630,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"W4Ihlm1AHzvYepkT","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"GetID","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/svg/dice-target.svg","scope":"global","command":"// navigator.clipboard.writeText(canvas.layers.find(l => l._active).controlled[0].id)\nnavigator.clipboard.writeText(canvas.layers.find(l => l._active)._hover.id)","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.XQkmxRlWbMPYW1aQ","hash":"28cd95a3c0e16075aa6a3219fdc62d5da2cb46a3"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191293056,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"XQkmxRlWbMPYW1aQ","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_st0yezfm5fb","path":"Lighting","color":"#0905ff","name":"Lighting","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["VdDK3C6PDnvmBSRL","dyveLs2TNHkTjn7w","ogAUfqFZ0VrkD1v0"],"version":"2.5.7"},"scene-packer":{"hash":"a758c92e83ce4033f91a857436b57e693692f6b4"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678632313777,"modifiedTime":1678632313876,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"XSC2grO1BwbTSX6v"}
{"name":"Hide","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/magic/perception/shadow-stealth-eyes-purple.webp","scope":"global","command":"if (!token) token = game.users.character?.getActiveTokens()[0] ?? false;\nif (!token) return ui.notifications.warn(`${game.user.name} has no assigned character or no active token on scene`);\n\nconst msgFlavor= `<p>${token.data.name} takes the <b>Hide</b> action.</p>`\n\n// Make the Dexterity (Stealth) Check\nawait game.MonksTokenBar.requestRoll([{\"token\": token.id}],{request:'skill:ste', silent:true, fastForward:true, flavor: msgFlavor, rollMode:'roll'})\n\n// Apply DFred's Convenient Effect\nawait game.dfreds.effectInterface.toggleEffect('Hiding');\n\n// Report Passive Perception\ngame.macros.getName('all-tokens-passive-perception').execute();","flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.Lr4WC74M5PrlnohM"},"scene-packer":{"sourceId":"Macro.XeOtRqk51rGvDFnz","defaultPermission":2,"hash":"0785d082322fcafd97041cf79fe0ec9ef08eafae"},"cf":{"id":"temp_z106s4k8im","path":"Actions In Combat","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191091506,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"XeOtRqk51rGvDFnz","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"angelic-weapon","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/magic/fire/dagger-rune-enchant-flame-strong-blue-yellow.webp","scope":"global","command":"/*\nMidi-QOL OnUseMacro calls this macro from the Macro library.\nThe Abbot's weapon attacks are magical. When the Abbot hits with any weapon,\n  the weapon deals an extra 4d8 radiant damage (included in the attack).\n*/\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nif (lastArg.hitTargets[0].length === 0) return {};\nlet tokenD = canvas.tokens.get(lastArg.tokenId).actor;\nlet actorD = game.actors.get(lastArg.actor._id);\nconst targetD = canvas.tokens.get(lastArg.hitTargets[0].id);\nconst damage_type = \"radiant\";\nconst baseDice = 4; //4d8[radiant]\nlet numDice = args[0].isCritical ? 2 * baseDice  : baseDice;\nlet damageRoll = new Roll(`${numDice}d8`).evaluate({async:false});\ngame.dice3d.showForRoll(damageRoll);\nnew MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damage_type, [targetD], damageRoll, {flavor: `(${CONFIG.DND5E.damageTypes[damage_type]})`, itemCardId: lastArg.itemCardId, damageList: lastArg.damageList});","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.azn66BqaHhM2nf78","hash":"1e6a402ed6edf221ce6f6ee2bfc903fd5686d6c5"},"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101668,"modifiedTime":1677191101668,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"azn66BqaHhM2nf78","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"vampire-3d6-bite-drain-max-hp","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/skills/wounds/blood-drip-droplet-red.webp","scope":"global","command":"// Midi-QOL OnUseMacro calls this macro from the Macro library.\n\nasync function wait(ms) {return new Promise(resolve => {setTimeout(resolve, ms);});}\nif(args[0].hitTargets[0] === undefined) return {};\nlet actorD = game.actors.get(args[0].actor._id);\nlet tokenD = canvas.tokens.get(args[0].tokenId);\nlet targetD  = canvas.tokens.get(args[0].hitTargets[0].id);\nlet itemD = args[0].item;\nlet itemCiD = args[0].itemCardId;\nlet damList = args[0].damageList;\nlet gameRound = game.combat ? game.combat.round : 0;\nlet damage_type = \"necrotic\";\n\nconst baseDice = 3;  // Bite in this case is 3d6\nconst numDice = args[0].isCritical ? baseDice * 2 : baseDice; // double dice on crit hit\nlet damageRoll = new Roll(`${numDice}d6[${damage_type}]`).evaluate({async:false});\ngame.dice3d?.showForRoll(damageRoll); //brag\n\nlet hpNow = targetD.actor.data.data.attributes.hp.max; //current max hp\nlet atkDamage = damageRoll.total; // save this attack bite damage\nlet totDamage = hpNow - atkDamage;\n\n// necrotic bite damage applied to target\nnew MidiQOL.DamageOnlyWorkflow(actorD, tokenD, atkDamage, damage_type, [targetD], damageRoll, {flavor: `(${CONFIG.DND5E.damageTypes[damage_type]})`, itemCardId: itemCiD, damageList: damList});\n// healing back to the vampire\nawait MidiQOL.applyTokenDamage([{damage: atkDamage, type: \"healing\"}], atkDamage, new Set([tokenD]), itemD.name, new Set());\n\n// Notify the GM\n/*\nThe target’s hit point maximum is reduced by an amount equal to the necrotic\ndamage taken, and the vampire regains hit points equal to that amount. The reduction\nlasts until the target finishes a long rest. The target dies if its hit point\nmaximum is reduced to 0.\n*/\nlet hitContent = `<div class=\"midi-qol-nobox\"><div class=\"midi-qol-flex-container\"><div>This attack reduces ${targetD.name}'s Maximum Hit Points by ${atkDamage}.</div><div class=\"midi-qol-target-npc-GM\"><em>The maximum hit points for ${targetD.name} have been reduced from ${hpNow} to ${totDamage} in this attack.</em></div><div class=\"midi-qol-target-npc-GM\"><em>The reduction lasts until ${targetD.name} finishes a long rest.</em></div><div class=\"midi-qol-target-npc-GM\"><em>${targetD.name} dies if this effect reduces its hit point maximum to 0.</em></div><div class=\"midi-qol-target-npc-GM\"><em><b>${tokenD.name}<b> is healed for ${atkDamage}.</em></div></div></div>`;\n\nconsole.log(hitContent);\n\nawait wait(600);\nlet chatMessage = game.messages.get(itemCiD);\nconsole.log(chatMessage);\n\nlet content = duplicate(chatMessage.data.content);\nlet searchString =  /<div class=\"midi-qol-saves-display\">[\\s\\S]*<div class=\"end-midi-qol-saves-display\">/g;\nlet replaceString = `<div class=\"midi-qol-saves-display\"><div class=\"end-midi-qol-saves-display\">${hitContent}`;\ncontent = content.replace(searchString, replaceString);\nchatMessage.update({content: content});\n\n// Check for an existing effect. If not found, create one. If found, update total Bite damage incurred.\nconst effectDataLabel = \"Bitten\";\nlet effectData;\nlet checkEffect = await targetD.actor.data.effects.find(i => i.data.label === effectDataLabel);\nif (!checkEffect) {\n  effectData = {\n    changes: [{ key: \"data.attributes.hp.max\", value: `${totDamage}`, mode: 5, priority: 20 }],\n    disabled: false,\n    duration: {startTime: game.time.worldTime},\n    flags: {\n      dae: { transfer: true, macroRepeat: \"none\", specialDuration: [] },\n      \"dnd5e-helpers\": { \"rest-effect\": \"Long Rest\" }\n    },\n    label : effectDataLabel,\n    origin: args[0].uuid,\n    icon : \"icons/skills/wounds/blood-drip-droplet-red.webp\",\n    transfer: false\n  };\n  await MidiQOL.socket().executeAsGM(\"createEffects\", {actorUuid: targetD.actor.uuid, effects: [effectData]});\n  return;\n} else if (checkEffect) {\n  effectData = {\n    _id: checkEffect.id,\n    changes: [\n      { key: \"data.attributes.hp.max\", value: `${totDamage}`, mode: 5, priority: 20 }\n    ]\n  };\n  await targetD.actor.updateEmbeddedDocuments('ActiveEffect', [effectData]);\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.bDK6LgQJL3spNrGx","hash":"885e97c17d333c587bc8ed9b116b056f04dd3b43"},"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101703,"modifiedTime":1677191101703,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"bDK6LgQJL3spNrGx","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Update Spell","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"const spellUpdates = {\n  \"flags\": {\n    \"itemacro\": { \"macro\": { \"command\": \"// requires Warpgate, Sequencer, and JB2A patreon module\\nconst casterToken = canvas.tokens.get(args.at(-1).tokenId);\\nconst stepSpell = args.at(-1).item\\n\\nconst distanceAvailable = stepSpell.system.range.value;\\n\\nlet crosshairsDistance = 0;\\nconst checkDistance = async (crosshairs) => {\\n    while (crosshairs.inFlight) {\\n        //wait for initial render\\n        await warpgate.wait(100);\\n\\n        const tokenCenter = casterToken.center;\\n\\n        const ray = new Ray(tokenCenter, crosshairs);\\n        const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0];\\n\\n        //only update if the distance has changed\\n        if (crosshairsDistance !== distance) {\\n            crosshairsDistance = distance;\\n            if (distance > distanceAvailable) {\\n                crosshairs.icon = 'icons/svg/hazard.svg';\\n            } else {\\n                crosshairs.icon = stepSpell.img;\\n            }\\n\\n            crosshairs.draw();\\n            crosshairs.label = `${distance} ft`;\\n        }\\n    }\\n}\\n\\n// swap between targeting the grid square vs intersection based on token's size\\nconst location = await warpgate.crosshairs.show({\\n  interval: casterToken.document.width % 2 === 0 ? 1 : -1,\\n  size: casterToken.document.width,\\n  icon: stepSpell.img,\\n  label: '0 ft.',\\n  },{show: checkDistance});\\n\\nif (location.cancelled || crosshairsDistance > distanceAvailable) {return;}\\n\\n// get the destination location x y\\nconst { x, y } = canvas.grid.getSnappedPosition(location.x - 10, location.y - 10);\\n\\n// Sequencer Effects\\nnew Sequence()\\n.animation()\\n.on(casterToken)\\n.fadeOut(50)\\n.hide()\\n\\n.effect()\\n.file('jb2a.misty_step.01.blue')\\n.atLocation(casterToken)\\n.waitUntilFinished()\\n\\n.animation()\\n.on(casterToken)\\n.teleportTo(location)\\n.snapToGrid()\\n.offset({x: -1, y:-1 })\\n\\n.animation()\\n.on(casterToken)\\n.show()\\n.opacity(1)\\n.fadeIn(250)\\n.waitUntilFinished()\\n\\n.effect()\\n.file('jb2a.misty_step.02.blue')\\n.atLocation(location)\\n.waitUntilFinished(-500)\\n\\n.play();\" } },\n    \"midi-qol\": { \"onUseMacroName\": \"[postActiveEffects]ItemMacro\", \"effectActivation\": false }\n  },\n  \"system\": {\n    \"target\": { \"value\": null, \"width\": null, \"units\": \"\", \"type\": \"self\" },\n    \"range\": { \"value\": 30, \"long\": null, \"units\": \"ft\" },\n    \"actionType\": \"util\"\n  }\n};\nasync function updateSpell(spell) {\n  for (const actor of game.actors) {\n    const hasSpell = actor.items.filter(i => i.name === spell);\n    if (hasSpell.length > 0) {\n      await Promise.all(hasSpell.map(async (item) => {\n        let updates = { \"_id\": item.id };\n        updates = [{ ...updates, ...spellUpdates }];\n        console.log(\"updates: \", updates);\n        await actor.updateEmbeddedDocuments(\"Item\", updates);\n      }));\n    }\n  }\n}\n\nupdateSpell(\"Misty Step\")","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"7def255dca36e996aa409396734ef0d320becb66","sourceId":"Macro.fC9eFdaIjAWPYf8q"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.fC9eFdaIjAWPYf8q"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678637906912,"modifiedTime":1678645657201,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"bHRHURBtqtDTHiL4"}
{"name":"ws-stealth","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","command":"/*  World script on stealth checks\nGrabs selected tokens and rolls a stealth check against all other tokens passive perception on the map. Then returns the results.\n*/\nHooks.on(\"dnd5e.rollSkill\", (actor, d20Roll, skillId) => {\n  if (skillId === \"ste\") {\n    const uniqueActor = {};\n    const caughtBy = canvas.tokens.placeables\n      .filter(token => !!token.actor) // no actor with token\n      .filter(({ actor }) => actor.system.attributes.hp.value > 0) // not dead\n      .filter(({ actor }) => { if (uniqueActor[actor.name]) { return false; } uniqueActor[actor.name] = true; return true; }) // all goblins have same\n      .filter(({ actor }) => { return selectedActor.id !== actor.id; }) // not themselves\n      .filter(({ actor }) => actor.system.skills.prc.passive >= stealth.total); // passive is equal or higher than stealth\n\n    let messageContent = `<h3>Is ${actor.name} hidden with a ${d20Roll.total}?</h3>`;\n\n    if (caughtBy.length > 0) {\n      messageContent += `<h5>Failed vs: </h5>`;\n      messageContent += `<table><thead><tr style=\"text-align:center\"><th colspan=2>ACTOR</th><th>PRC</th></tr></thead>`;\n      messageContent += `<tbody>`;\n      caughtBy.map((token) => {\n        messageContent += `<tr height=\"32\"><td><img src=\"${token.document.texture.src}\" height=\"30\" width=\"30\" style=\"border:none\"></img></td><td style=\"padding-left: 6px\"><strong>${token.name}</strong></td><td>${token.actor.system.skills.prc.passive}</td></tr>`;\n      });\n      messageContent += '</tbody></table>';\n    } else {\n      messageContent += `<h5>Successfully hidden!</h5>`;\n    }\n\n    // notify the GM\n    ChatMessage.create({\n      content: messageContent,\n      flavor: \"Stealth Skill Check\",\n      speaker: { actor: null, scene: null, token: null, alias: '' },\n      whisper: ChatMessage.getWhisperRecipients(\"GM\")\n    });\n  }\n})","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"832945cba870d2fc2bbc2548c0e4bcc7ee4f7ce5","sourceId":"Macro.dHvO1KJptlAwWNSu"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.dHvO1KJptlAwWNSu"},"cf":{"id":"temp_descv1hlwi"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678889178613,"modifiedTime":1678903988212,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"cWsfC623PJjhLgCv"}
{"name":"PlaySelectionFromPlaylist","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"async function playSound({ playlist, sound, playing })\n{\n  const randomArrayElement = (arr) => arr[Math.floor(Math.random()* arr.length)]; \n\n  if(!playlist) return;\n  if(playlist instanceof String || typeof playlist === 'string')\n    playlist = game.playlists.get(playlist) || game.playlists.getName(playlist); \n  if(!sound) sound = randomArrayElement(playlist.data.sounds.map(s=> s.name));\n\n  let updateData = {};\n  updateData.sounds = duplicate(playlist.data.sounds).map((s)=> {\n    if(s.name === sound) s.playing = playing === undefined ? !s.playing : playing;\n    return s;\n  });\n  updateData.playing = updateData.sounds.reduce((a,s) => a || s.playing, false);\n  \n  return await playlist.update(updateData);\n}\n\nplaySound({\n  playlist : `Death House`,\n  sound : `One Must Die`,\n});","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.d4g5S9niIzQL3key","hash":"e4c116fd3b4dafa823bc462b65005bc63106fbc8"},"cf":{"id":"temp_vekmxgi59zp","path":"Music","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686067761,"modifiedTime":1672686067761,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"d4g5S9niIzQL3key","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_5yo6bsjh9fo","path":"Misc","color":"#828282","name":"Misc","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["2yqmvKppwjQK43iN","Sv5CJ0gfzINL76xq"],"version":"2.5.6"},"scene-packer":{"hash":"9231812bbe9a3f96bb4287fbb8a31864f5866761"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686225194,"modifiedTime":1672686225292,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"dXt3F5CmpQcZU80x"}
{"name":"standardizeLightColor","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/sundries/lights/torch-brown-lit.webp","command":"// requires Tagger\nconst torch = {\"intensity\": 1, \"reverse\": false, \"speed\": 1, \"type\": \"torch\"};\nconst daylight = {\"intensity\": 1, \"reverse\": false, \"speed\": 1, \"type\": null}\nconst dark = { min: 0.2, max: 1};\nconst colors = [\"#ffcc66\", \"#e6e6e6\"]\nawait canvas.scene.updateEmbeddedDocuments(\"AmbientLight\", canvas.scene.lights.map((l) => {\n    let color = colors[0];\n    let anim = torch;\n    if (Tagger.hasTags(l,\"daylight\")) {\n        color = colors[1];\n        anim = daylight;        \n    }\n    return { \n        _id: l.id,\n        config: {\n        \"alpha\": 0.2,\n        \"animation\": anim,\n        \"color\":  color,\n        \"darkness\": dark\n        }\n    };\n}));\n//darkness: dark","flags":{"scene-packer":{"hash":"d7603c3767a7179c26fba024e8344bed72bd5f93","sourceId":"Macro.dyveLs2TNHkTjn7w"},"cf":{"id":"temp_st0yezfm5fb","path":"Lighting","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676153883194,"modifiedTime":1678632313678,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"dyveLs2TNHkTjn7w","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"tmx-glow-orange","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"console.log(args);\nconst lastArg = args[args.length - 1];\nconst target = canvas.tokens.get(lastArg.tokenId)\n\n//The filterID can be any name you desire.\nlet filterID = \"purpleGlow\";\n//You can change the params to be any other TMX effect you want. Just make sure to keep the one line filterId: filterID,\nlet params =\n[{\n    filterType: \"glow\",\n    filterId: filterID,\n    outerStrength: 4,\n    innerStrength: 0,\n    color: 0x5099DD,\n    quality: 0.5,\n    padding: 10,\n    animated:\n    {\n        color: \n        {\n           active: true, \n           loopDuration: 3000, \n           animType: \"colorOscillation\", \n           val1:0xCC6600,\n           val2:0xFF8C1A\n        }\n    }\n}];\n\n\nif (args[0] === \"on\")\n  await TokenMagic.addUpdateFiltersOnSelected(params, target);\n\nif (args[0] === \"off\")\n//  target.TMFXdeleteFilters(filterID);\n  await TokenMagic.deleteFilters(target, filterID);","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.f8oBnGpl2Xz4rGQV","hash":"279edacab53d2cfed6ac0def2e0c246205cdcaae"},"cf":{"id":"temp_n7bxqu6hypb","path":"Token FX","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686274004,"modifiedTime":1672686274004,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"f8oBnGpl2Xz4rGQV","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Dodge","type":"script","author":"Jd73bpddRreBTuIB","img":"https://assets.forge-vtt.com/bazaar/modules/dfreds-convenient-effects/assets/images/dodging.svg","scope":"global","command":"if (!token) token = game.users.character?.getActiveTokens()[0] ?? false;\nif (!token) return ui.notifications.warn(`${game.user.name} has no assigned character or no active token on scene`);\n\nconst msgHtml = `<p>${token.data.name} takes the <b>Dodge</b> action.</p><p>Dodge grants disadvantage to all who attack them and advantage to all Dexterity saving throws (if they can see their attacker) until their next turn.</p>`\n\nawait ChatMessage.create({content: msgHtml});\ngame.dfreds.effectInterface.toggleEffect('Dodge');","flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.Lr4WC74M5PrlnohM"},"scene-packer":{"sourceId":"Macro.hmJ7vk2KbBQBqWAY","defaultPermission":2,"hash":"cd91dae3acee2907269281178dae4c083c00e2ea"},"cf":{"id":"temp_z106s4k8im","path":"Actions In Combat","color":"#6c0094"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191091598,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"hmJ7vk2KbBQBqWAY","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Strength Drain","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/magic/time/hourglass-yellow-green.webp","scope":"global","command":"async function updateToken(target, effectData) {\n            await target.actor.createEmbeddedEntity(\"ActiveEffect\", effectData);///this will update the listed in \"target\" wit the effect listed in \"effectData\"\n        }\nmain();\nasync function main( ){\nconsole.debug (args);\n    // this is an on/off given by DAE\n    if (args[0] === \"on\") { \n        /// this find the target actor as passed by the @target from DAE\n        let target = canvas.tokens.get(args[1]); \n        /// this rolls the ability save for the token and grabs the result\n//        let { total } = await target.actor.rollAbilitySave(\"con\");\n//        if (total < 14) {///if the result is less than 14 do the next section\n            ChatMessage.create({content: \"The hit leaves its target feeling weaker.\"});\n            let damageRoll = args[2]; ///find the damage rolled by the ability\n            let effectData = { /// create the active effect data \n                label: \"Strength Drain\",\n                icon: \"systems/dnd5e/icons/skills/affliction_02.jpg\",\n                changes: [{\n                    \"key\": \"data.abilities.str.value\",\n                    \"mode\": 2, ///this is ADD\n                    \"value\": -damageRoll, /// this grabs the damage roll to use for the effect value\n                    \"priority\": \"20\",\n                }]\n            };\n            updateToken(target, effectData); ///this runs the section at the top to actually add the effect\n        }\n    }\n    if (args[0] === \"off\") return; /// when the macro is turned off, do nothing as we want to effect to continue afterwards","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"scene-packer":{"sourceId":"Macro.jESKkezCZlLsKYDL","hash":"59f73b73aa8db39e76b5ed5656a11b107a1872ec"},"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101736,"modifiedTime":1677191101736,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"jESKkezCZlLsKYDL","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Tool Check","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/vtt-512.png","command":"const options = actor.itemTypes.tool.reduce((acc, tool) => {\n  return acc + `<option value=\"${tool.id}\">${tool.name}</option>`;\n}, \"\");\nconst content = `\n<form>\n  <div class=\"form-group\">\n    <label>Select Tool:</label>\n    <div class=\"form-fields\">\n      <select>${options}</select>\n    </div>\n  </div>\n</form>`;\nconst id = await Dialog.prompt({\n  content,\n  title: \"Which tool?\",\n  rejectClose: false,\n  label: \"Roll Tool\",\n  callback: (html) => html[0].querySelector(\"select\").value\n});\nconst item = actor.items.get(id);\n\nawait item.rollToolCheck();\n// const {total} = await item.rollToolCheck();\n// await actor.items.getName(\"Thieves' Tools\").rollToolCheck()","flags":{"scene-packer":{"hash":"2eccf4ab3b71ca02d9cbe7c8c65c920e06689823","sourceId":"Macro.48skKUjCIzRJIojY","defaultPermission":2},"core":{"sourceId":"Macro.jNBjbOZ6elx3hF2H"},"cf":{"id":"temp_rhhg9m29647","path":"Tools","color":"#ff8000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676315968769,"modifiedTime":1678632340880,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"jNBjbOZ6elx3hF2H","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"preferred-token-settings","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/svg/combat.svg","scope":"global","command":"/* This will set every token in scene to always display their token bars and nameplate based on their hostility,\n and sets the first bar to represent HP and removes the second token bar. */\nconst tokens = game.scenes.viewed.tokens.map(tokenDoc => {\n  if (tokenDoc.disposition !== CONST.TOKEN_DISPOSITIONS.FRIENDLY) { \n    return {\n      _id: tokenDoc.id,\n      \"bar1.attribute\": \"attributes.hp\",\n      \"bar2.attribute\": \"\",\n      \"displayName\": CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,\n      \"displayBars\": CONST.TOKEN_DISPLAY_MODES.HOVER\n    };\n }\n else { return {\n   _id: tokenDoc.id,\n   \"bar1.attribute\": \"attributes.hp\",\n   \"bar2.attribute\": \"\",\n   \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n   \"displayBars\": CONST.TOKEN_DISPLAY_MODES.HOVER\n   };\n  }\n});\n\nawait canvas.scene.updateEmbeddedDocuments('Token', tokens)\n// CONST.TOKEN_DISPOSITIONS.HOSTILE | CONST.TOKEN_DISPOSITIONS.NEUTRAL","flags":{"combat-utility-belt":{"macroTrigger":""},"scene-packer":{"sourceId":"Macro.kQmz41VaUPx8jnu7","hash":"8d4b4c1f939cdc079309fb6374957329b41eccd2"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191293112,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"kQmz41VaUPx8jnu7","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_dnf957yr58g","path":"Monsters","color":"#cc0000","name":"Monsters","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["azn66BqaHhM2nf78","jESKkezCZlLsKYDL","GD15KbuGYMPc2n8p","bDK6LgQJL3spNrGx","2V8HjtJpnynAGKQZ"],"version":"2.5.7"},"scene-packer":{"hash":"c4e838baaa9a395f985a07529071a7f3ef9e3f34"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1677191101783,"modifiedTime":1677191101878,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"krgONmTw5uJIvsQG"}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_rhhg9m29647","path":"Tools","color":"#ff8000","name":"Tools","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["QLBIOxK1w7CtqMXH","jNBjbOZ6elx3hF2H"],"version":"2.5.7"},"scene-packer":{"hash":"905572580207da1d3d7c5fdc46e2238468e1141a"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676317223474,"modifiedTime":1678632341112,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"lhrdIk17NbEeFtgw"}
{"name":"Barovia Daytime Random Encounter Check","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/skills/melee/weapons-crossed-swords-yellow.webp","scope":"global","command":"// setting variables\nlet tableName = \"Daytime Random Encounters\";\nlet msgContent = 'Wandering Monster roll was: ';\nlet result = '';\n\n// roll to check for wandering monster\nlet randomRoll = new Roll(`1d20`).evaluate({async:false});\n// game.dice3d.showForRoll(randomRoll); // show the animated die dice3d?\nresult = randomRoll.total;\n\n// create the message\nif(result !== '') {\n  let chatData = {\n    content: msgContent + result,\n    whisper: Array.from(game.users).filter(u => u.isGM).map(u => u._id)\n    // game.users.entities.filter(u => u.isGM).map(u => u._id)\n  };\n  ChatMessage.create(chatData, {});\n}\n\n// In this example, a roll greater or equal to 18 will generate a roll from the Table. Tweak as needed!\nif (result >= 18) {\n  const table = game.tables.getName(tableName);\n  // game.tables.entities.find(t => t.name === tableName);\n  table.draw();\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.lwXlCYvLR7UwBcCP","hash":"456b6904a54416e60abc54eb5d2417503b117ed6"},"cf":{"id":"temp_b5jc266e57h","path":"Random Encounters","color":"#1b4d00"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191113482,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"lwXlCYvLR7UwBcCP","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-bladesong","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"midi-qol.preCheckSaves\", function(workflow) {\n    console.log(\"WS workflow\",workflow);\n    let bladesong = workflow.targets.effects.find(i => i.data.label.toLowerCase() === `bladesong`);\n    if (!bladesong) return{};\n\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.mud3Cmt7anVDrEOh","hash":"7d7eb40ef10fe216b1ebc77dd2ab0de67c2aa7a8"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035263,"modifiedTime":1672686035263,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"mud3Cmt7anVDrEOh","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-soulthirst","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// World Script module required\nHooks.on(\"midi-qol.preambleComplete\", function (workflow) {\n  let soulThirst = workflow.actor.items.find(i=>i.name.toLowerCase() === 'soul thirst');\n  if (!soulThirst) return{};\n  let getId = workflow.targets.values().next().value.id;\n  let attackTarget = canvas.tokens.get(getId);\n  let tempHp = workflow.actor.data.data.attributes.hp.temp;\n  if (tempHp) {\n    console.log(\"Has tempHp: \",tempHp);\n  } else {\n    console.log('No tempHp (',tempHp,')');\n  }\n}","flags":{"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.n2F1tlpOvUhnFzym","hash":"db2b33f9cf080fae77e8a08ca48fe6c052057d32"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035319,"modifiedTime":1672686035319,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"n2F1tlpOvUhnFzym","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_z106s4k8im","path":"Actions In Combat","color":"#6c0094","name":"Actions In Combat","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["Lr4WC74M5PrlnohM","hmJ7vk2KbBQBqWAY","XeOtRqk51rGvDFnz","VVDH6HokBdmAwVz2"],"version":"2.5.7"},"scene-packer":{"hash":"6140a716b55a1b43118d39df36bb698000f001a6"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1672685930778,"modifiedTime":1677191091771,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"n6zPlURwX6REJLhN"}
{"name":"ws-waitForDiceSoNice","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// https://discord.com/channels/170995199584108546/699750150674972743/1007373249526628474\nfunction waitFor3DDiceMessage(targetMessageId) {\n  function buildHook(resolve) {\n    Hooks.once('diceSoNiceRollComplete', (messageId) => {\n      if (targetMessageId === messageId)\n        resolve(true);\n      else\n        buildHook(resolve)\n    });\n  }\n  return new Promise((resolve,reject) => {\n    if(game.dice3d){\n      buildHook(resolve);\n    } else {\n      resolve(true);\n    }\n  });\n}","flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"scene-packer":{"sourceId":"Macro.nO1YePJkLTltMJ8J","hash":"a057f08d05e341f0850a148bea2046bc0baf0050"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035357,"modifiedTime":1672686035357,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"nO1YePJkLTltMJ8J","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Reset Brazier Light","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/magic/light/orb-lightbulb-gray.webp","command":"const scn = game.scenes.viewed;\nconst light_id = \"e6iDuaHIxKRJOmzq\";\nconst updates = [{_id: light_id, \"config.color\": \"#ffffff\"}];\nawait scn.updateEmbeddedDocuments(\"AmbientLight\", updates);","flags":{"scene-packer":{"hash":"44cd6976ee01484d24266c4e31eb06f7dea0fe9e","sourceId":"Macro.odYRIJG5PPgpWgnj"},"core":{"sourceId":"Macro.odYRIJG5PPgpWgnj"},"cf":{"id":"temp_71hhn63b31s","path":"Scenes#/CF_SEP/Castle Ravenloft","color":"#ff0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1676991614528,"modifiedTime":1677191293405,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"odYRIJG5PPgpWgnj","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ToggleAmbientLights","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/sundries/lights/candle-unlit-white.webp","scope":"global","command":"await canvas.scene.updateEmbeddedDocuments(\"AmbientLight\", game.scenes.viewed.lights.map((l) => { return { _id: l.id, hidden: !l.data.hidden}; }));","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.ogAUfqFZ0VrkD1v0","hash":"e89be6457d96d40d4805cb0d55ea90945d0d020a"},"cf":{"id":"temp_st0yezfm5fb","path":"Lighting","color":"#0905ff"},"core":{"sourceId":"Macro.ogAUfqFZ0VrkD1v0"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1678632313743,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"ogAUfqFZ0VrkD1v0","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-piercer-critical","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// World Script Module Required to run this.\nHooks.on(\"midi-qol.preDamageRoll\", async function (workflow) {\n    if(!workflow.isCritical) return {};\n    let piercer = workflow.actor.itemTypes.feat.find(i=> i.name.toLowerCase() === \"piercer\");\n    if(!piercer) return {};\n    let itemD = workflow.item;\n    if(itemD.data.data.damage.parts[0][1] != \"piercing\") return {};\n    let gameRound = game.combat ? game.combat.round : 0;    \n    let effectData = [{\n        changes: [            \n            { key: \"flags.dnd5e.meleeCriticalDamageDice\", mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: 1, priority: 20 }\n        ],\n        origin: \"\",\n        disabled: false,\n        duration: { rounds: 1, startRound: gameRound, startTime: game.time.worldTime },\n        flags: { dae: { specialDuration: [\"DamageDealt\"] } },\n        icon: workflow.item.img,\n        label: workflow.item.name\n    }];\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: workflow.actor.uuid, effects: effectData });\n});","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.p2JVBKAVeZgJ3xJ2","hash":"dd6037be42e962454639e5bc68e8c99b3c217c5f"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035394,"modifiedTime":1672686035394,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"p2JVBKAVeZgJ3xJ2","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000","name":"World Scripter","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["SkVszaJLwNua8VDL","mud3Cmt7anVDrEOh","yVPxsaHZB3qYoWGn","reitQNdOYR0nfwoG","4cKiuw1jdEWJSORM","z6H063hOXMrP69pG","p2JVBKAVeZgJ3xJ2","K4togkmpr2487xUT","n2F1tlpOvUhnFzym","CTZunpDtM1Xc65ak","nO1YePJkLTltMJ8J","cWsfC623PJjhLgCv"],"version":"2.5.6"},"scene-packer":{"hash":"af89282a43353df5bc1e0b26b31030a65ce19efc"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1672686035538,"modifiedTime":1678903988212,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"qHtL9jGC6EOrZGLc"}
{"name":"LockAllDoorsInScene","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/svg/dice-target.svg","scope":"global","command":"// Locks all doors\ncanvas.walls.updateAll({ds:2}, (wall) => wall.data.door == 1)","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.qhqjLramWCzi7xqj","hash":"77f6bd1c5af75767d69c2ae3e23f8c335ccadf2d"},"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191293169,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"qhqjLramWCzi7xqj","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Lair Action End Turn","type":"script","scope":"global","author":"Jd73bpddRreBTuIB","img":"icons/svg/d20.svg","command":"// Get Lair Token\nconst lair = canvas.tokens.placeables.filter((token) => token.name.toLowerCase().match(/lair/i))[0]\n\n\n// Get Strahd Token\nconst strahd = canvas.tokens.placeables.filter((token) => token.name.toLowerCase().match(/strahd/i))[0];\nstrahd.control()\n\n// Animate\nnew Sequence()\n.animation()\n.on(lair)\n.teleportTo({ x: 0, y: 0 })\n.snapToGrid()\n\n.play();","ownership":{"default":0,"Jd73bpddRreBTuIB":3},"flags":{"scene-packer":{"hash":"00bf3730de0360b02cfcd7966ec8a88a3ffce79e","sourceId":"Macro.XAGAuWVmUwETaMic"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.gVGoinRjwIdXeU3G"},"cf":{"id":"temp_71hhn63b31s"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1678598321488,"modifiedTime":1678761511819,"lastModifiedBy":"Jd73bpddRreBTuIB"},"folder":null,"sort":0,"_id":"r7bquUURNPCANhFn"}
{"name":"ws-hide-initiative-rolls-from-NPCs","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"Hooks.on(\"preCreateChatMessage\", (msg, roll, context) => {\n    if(!game.user.isGM) return;\n    if(msg.getFlag(\"core\", \"initiativeRoll\")){\n        context.temporary = true;\n        if(game.actors.get(roll.speaker?.actor)?.hasPlayerOwner) game.dice3d?.showForRoll(msg.roll);\n    }\n});","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.s1btyBlSGmYyC27Q"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"},"scene-packer":{"sourceId":"Macro.reitQNdOYR0nfwoG","hash":"5081100a3fc3db496582f6218aa6946e8fde4138"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035426,"modifiedTime":1672686035426,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"reitQNdOYR0nfwoG","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"#[CF_tempEntity]","type":"chat","command":"","flags":{"cf":{"id":"temp_3z3pjeh75wb","path":"Scenes","color":"#0905ff","name":"Scenes","children":["temp_b5jc266e57h","temp_71hhn63b31s"],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["VkaLR9siIHxInCRI","Ir7x8nO9bbBxX7qj","XQkmxRlWbMPYW1aQ","qhqjLramWCzi7xqj","kQmz41VaUPx8jnu7","8qTGo9yWZLvjPjqr","8TrDSvTcaRNBnHO3"],"version":"2.5.7"},"scene-packer":{"hash":"89b82edaf0ddbf530a4c4f7976d704e8367af893"}},"author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":1672686062641,"modifiedTime":1678636672382,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"xoMv0F1b5wncbahw"}
{"name":"ws-blood-frenzy","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// World Script Module Required to run this.\nHooks.on(\"midi-qol.preambleComplete\", function (workflow) {\n    let bloodFrenzy = workflow.actor.items.find(i=> i.name.toLowerCase() === \"blood frenzy\");\n    if(!bloodFrenzy) return {};\n    let getId = workflow.targets.values().next().value.id;\n    let attackTarget = canvas.tokens.get(getId);\n    if(attackTarget.actor.data.data.attributes.hp.value >= attackTarget.actor.data.data.attributes.hp.max) return {};\n    workflow.advantage = true;\n});","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.yVPxsaHZB3qYoWGn","hash":"7a19d4890bdf63183aed73188affe8cf41d3fa37"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035457,"modifiedTime":1672686035457,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"yVPxsaHZB3qYoWGn","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"ws-pack-tactics","type":"script","author":"Jd73bpddRreBTuIB","img":"icons/svg/dice-target.svg","scope":"global","command":"// World Script Module Required to run this.\nHooks.on(\"midi-qol.preambleComplete\", function (workflow) {\n    let packTactics = workflow.actor.items.find(i=> i.name.toLowerCase() === \"pack tactics\");\n    if(!packTactics) return {};\n    let getId = workflow.targets.values().next().value.id;\n    let attackTarget = canvas.tokens.get(getId);\n    let findFriend = MidiQOL.findNearby(CONST.TOKEN_DISPOSITIONS.HOSTILE, attackTarget, 5, null).filter(i => i.id != workflow.tokenId).length > 0;\n    if(!findFriend) return {};\n    workflow.advantage = true;    \n});","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"scene-packer":{"sourceId":"Macro.z6H063hOXMrP69pG","hash":"69882f2f0d8b6760fd96a2debef469e19734b268"},"cf":{"id":"temp_descv1hlwi","path":"World Scripter","color":"#cc0000"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":1672686035502,"modifiedTime":1672686035502,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"z6H063hOXMrP69pG","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
{"name":"Barovia Nighttime Random Encounter Check (Copy)","type":"script","author":"5iqOgPLPmoUd9MiS","img":"icons/skills/melee/weapons-crossed-swords-purple.webp","scope":"global","command":"// setting variables\nlet tableName = \"Nighttime Random Encounters\";\nlet msgContent = 'Wandering Monster roll was: ';\nlet result = '';\n\n// roll to check for wandering monster\nlet randomRoll = new Roll(`1d20`).evaluate({async:false});\nresult = randomRoll.total;\n\n// create the message\nif(result !== '') {\n  let chatData = {\n    content: msgContent + result,\n    whisper: Array.from(game.users).filter(u => u.isGM).map(u => u._id)\n  };\n  ChatMessage.create(chatData, {});\n}\n\n// In this example, a roll greater or equal to 10 will generate a roll from the Table. Tweak as needed!\nif (result >= 10) {\n  const table = game.tables.getName(tableName);\n  // game.tables.entities.find(t => t.name === tableName);\n  table.draw();\n}","flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.lwXlCYvLR7UwBcCP"},"scene-packer":{"sourceId":"Macro.zmrSR9hFAfPFySI2","hash":"b0c4ad070ffe9566576d3f4fb3f06cd737d9c3c6"},"cf":{"id":"temp_b5jc266e57h","path":"Random Encounters","color":"#1b4d00"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1677191113567,"lastModifiedBy":"Jd73bpddRreBTuIB"},"_id":"zmrSR9hFAfPFySI2","folder":null,"sort":0,"ownership":{"default":0,"Jd73bpddRreBTuIB":3}}
